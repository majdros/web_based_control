{"ast":null,"code":"var _jsxFileName = \"/home/majd/Desktop/react-ros2-robot/src/components/EmergencyStop.jsx\";\nimport React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nclass EmergencyStop extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      this.setState({\n        connected: true\n      });\n      console.log(\"connection established in Teleoperation Component!\");\n    });\n    this.state.ros.on(\"close\", () => {\n      this.setState({\n        connected: false\n      });\n      console.log(\"connection is closed!\");\n\n      // reconnect every 5 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.error(\"connection problem: \", error);\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.error(\"connection problem: \", error);\n    }\n  }\n  componentDidMount() {\n    this.sendEmergencyStop();\n  }\n  sendEmergencyStop() {\n    console.log(\"Emergency Stop connected\");\n\n    // create a ROS publisher on the topic /emergency_stop\n    var emergency_stop = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.EMERGENCYSTOP_TOPIC,\n      messageType: Config.EMERGENCYSTOP_MSG_TYPE\n    });\n\n    // create a bool message to be to published to rosbridge\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y / 50,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x / 50\n      }\n    });\n    emergency_stop.publish(twist);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Joystick, {\n      size: 250,\n      baseColor: \"#EEEEEE\",\n      stickColor: \"#BBBBBB\",\n      move: this.Move,\n      stop: this.Stop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }));\n  }\n}\nexport default EmergencyStop;","map":{"version":3,"names":["React","Component","Alert","Row","Col","Button","Config","EmergencyStop","constructor","state","ros","init_connection","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","componentDidMount","sendEmergencyStop","emergency_stop","Topic","name","EMERGENCYSTOP_TOPIC","messageType","EMERGENCYSTOP_MSG_TYPE","twist","Message","linear","x","event","y","z","angular","publish","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Joystick","size","baseColor","stickColor","move","Move","stop","Stop"],"sources":["/home/majd/Desktop/react-ros2-robot/src/components/EmergencyStop.jsx"],"sourcesContent":["import React, { Component} from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { Row, Col, Button} from \"react-bootstrap\";\nimport Config from \"../scripts/config\"\n\n\n\nclass EmergencyStop extends Component{\n    state = { ros: null };\n\n\n    constructor() {\n        super();\n        this.init_connection();\n\n        \n    }\n\n    init_connection() {\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n    \n        this.state.ros.on(\"connection\", () => {\n            this.setState({ connected: true });\n            console.log(\"connection established in Teleoperation Component!\");\n        });\n    \n        this.state.ros.on(\"close\", () => {\n            this.setState({ connected: false });\n            console.log(\"connection is closed!\");\n\n            // reconnect every 5 seconds\n            setTimeout(() => {\n            try {\n                this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n            } \n            catch (error) {\n                console.error(\"connection problem: \", error);\n            }\n            }, Config.RECONNECTION_TIMER);\n        });\n    \n        try {\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } \n        catch (error) {\n            console.error(\"connection problem: \", error);\n        }\n    }\n\n\n    componentDidMount() {\n        this.sendEmergencyStop();\n    }\n\n\n    sendEmergencyStop(){\n        console.log(\"Emergency Stop connected\");\n\n        // create a ROS publisher on the topic /emergency_stop\n        var emergency_stop = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.EMERGENCYSTOP_TOPIC,\n            messageType: Config.EMERGENCYSTOP_MSG_TYPE,\n        });\n\n        // create a bool message to be to published to rosbridge\n        var twist = new window.ROSLIB.Message({\n            linear: {x: event.y / 50, y: 0, z: 0},\n            angular: {x: 0, y: 0, z: -event.x / 50},\n        });\n\n        emergency_stop.publish(twist);\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <Joystick\n                    size={250}\n                    baseColor=\"#EEEEEE\"\n                    stickColor=\"#BBBBBB\"\n                    move={this.Move}\n                    stop={this.Stop}\n                ></Joystick>\n            </div>\n        );\n    }\n\n}\n\n\n\nexport default EmergencyStop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}