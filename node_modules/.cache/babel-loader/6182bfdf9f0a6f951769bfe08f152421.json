{"ast":null,"code":"var _jsxFileName = \"/home/majd/Desktop/react-ros2-robot/src/components/Teleoperation.jsx\";\n// source: https://github.com/RobotWebTools/roslibjs/blob/ros2/examples/node_simple.js\n// source: https://www.npmjs.com/package/react-joystick-component\n\nimport React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\nclass Teleoperation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n    this.Move = this.Move.bind(this);\n    this.Stop = this.Stop.bind(this);\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established in Teleoperation Component!\");\n      console.log(this.state.ros);\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({\n        connected: false\n      });\n      //try to reconnect every 5 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem \");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"connection problem \");\n    }\n  }\n  Move(event) {\n    console.log(\"handle move\");\n    //we need to create a ROS publisher on the topic cmd_vel\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    });\n    //we need to create a twist message to be to published to rosbridge\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y / 50,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x / 50\n      }\n    });\n    //we need to publish the message on the cmd_vel topic\n    cmd_vel.publish(twist);\n  }\n  Stop(event) {\n    console.log(\"handle stop\");\n    //we need to create a ROS publisher on the topic cmd_vel\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\"\n    });\n    //we need to create a twist message to be to published to rosbridge\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    });\n    //we need to publish the message on the cmd_vel topic\n    cmd_vel.publish(twist);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Joystick, {\n      size: 150,\n      baseColor: \"#EEEEEE\",\n      stickColor: \"#BBBBBB\",\n      move: this.Move,\n      stop: this.Stop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default Teleoperation;","map":{"version":3,"names":["React","Component","Joystick","Config","Teleoperation","constructor","state","ros","init_connection","Move","bind","Stop","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","event","cmd_vel","Topic","name","CMD_VEL_TOPIC","messageType","twist","Message","linear","x","y","z","angular","publish","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","size","baseColor","stickColor","move","stop"],"sources":["/home/majd/Desktop/react-ros2-robot/src/components/Teleoperation.jsx"],"sourcesContent":["// source: https://github.com/RobotWebTools/roslibjs/blob/ros2/examples/node_simple.js\n// source: https://www.npmjs.com/package/react-joystick-component\n\nimport React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\n\nclass Teleoperation extends Component {\n    state = { ros: null };\n\n    constructor() {\n    super();\n    this.init_connection();\n\n    this.Move = this.Move.bind(this);\n    this.Stop = this.Stop.bind(this);\n    }\n    \n    init_connection() {\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n\n        this.state.ros.on(\"connection\", () => {\n        console.log(\"connection established in Teleoperation Component!\");\n        console.log(this.state.ros);\n        this.setState({ connected: true });\n        });\n\n        this.state.ros.on(\"close\", () => {\n        console.log(\"connection is closed!\");\n        this.setState({ connected: false });\n        //try to reconnect every 5 seconds\n        setTimeout(() => {\n            try {\n            this.state.ros.connect(\n                \"ws://\" +\n                Config.ROSBRIDGE_SERVER_IP +\n                \":\" +\n                Config.ROSBRIDGE_SERVER_PORT +\n                \"\"\n            );\n            } catch (error) {\n            console.log(\"connection problem \");\n            }\n        }, Config.RECONNECTION_TIMER);\n        });\n\n        try {\n        this.state.ros.connect(\n            \"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT +\n            \"\"\n        );\n        } catch (error) {\n        console.log(\n            \"ws://\" +\n            Config.ROSBRIDGE_SERVER_IP +\n            \":\" +\n            Config.ROSBRIDGE_SERVER_PORT +\n            \"\"\n        );\n        console.log(\"connection problem \");\n        }\n  }\n\n  Move(event) {\n    console.log(\"handle move\");\n    //we need to create a ROS publisher on the topic cmd_vel\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\",\n    });\n    //we need to create a twist message to be to published to rosbridge\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y / 50,\n        y: 0,\n        z: 0,\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x / 50,\n      },\n    });\n    //we need to publish the message on the cmd_vel topic\n    cmd_vel.publish(twist);\n  }\n  Stop(event) {\n    console.log(\"handle stop\");\n    //we need to create a ROS publisher on the topic cmd_vel\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: \"geometry_msgs/Twist\",\n    });\n    //we need to create a twist message to be to published to rosbridge\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: 0,\n        y: 0,\n        z: 0,\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0,\n      },\n    });\n    //we need to publish the message on the cmd_vel topic\n    cmd_vel.publish(twist);\n  }\n\n  render() {\n    return (\n      <div>\n        <Joystick\n          size={150}\n          baseColor=\"#EEEEEE\"\n          stickColor=\"#BBBBBB\"\n          move={this.Move}\n          stop={this.Stop}\n        ></Joystick>\n      </div>\n    );\n  }\n}\n\nexport default Teleoperation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}