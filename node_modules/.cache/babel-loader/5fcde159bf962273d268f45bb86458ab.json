{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shapeBoundsFactory = void 0;\nvar shape_enum_1 = require(\"../enums/shape.enum\");\nvar shapeBoundsFactory = function (shape, absoluteX, absoluteY, relativeX, relativeY, dist, radius, baseSize, parentRect) {\n  switch (shape) {\n    case shape_enum_1.JoystickShape.Square:\n      relativeX = getWithinBounds(absoluteX - parentRect.left - baseSize / 2, baseSize);\n      relativeY = getWithinBounds(absoluteY - parentRect.top - baseSize / 2, baseSize);\n      return {\n        relativeX: relativeX,\n        relativeY: relativeY\n      };\n    case shape_enum_1.JoystickShape.AxisX:\n      relativeX = getWithinBounds(absoluteX - parentRect.left - baseSize / 2, baseSize);\n      relativeY = 0;\n      return {\n        relativeX: relativeX,\n        relativeY: relativeY\n      };\n    case shape_enum_1.JoystickShape.AxisY:\n      relativeX = 0;\n      relativeY = getWithinBounds(absoluteY - parentRect.top - baseSize / 2, baseSize);\n      return {\n        relativeX: relativeX,\n        relativeY: relativeY\n      };\n    default:\n      if (dist > radius) {\n        relativeX *= radius / dist;\n        relativeY *= radius / dist;\n      }\n      return {\n        relativeX: relativeX,\n        relativeY: relativeY\n      };\n  }\n};\nexports.shapeBoundsFactory = shapeBoundsFactory;\nvar getWithinBounds = function (value, baseSize) {\n  var halfBaseSize = baseSize / 2;\n  if (value > halfBaseSize) {\n    return halfBaseSize;\n  }\n  if (value < -halfBaseSize) {\n    return halfBaseSize * -1;\n  }\n  return value;\n};","map":null,"metadata":{},"sourceType":"script"}