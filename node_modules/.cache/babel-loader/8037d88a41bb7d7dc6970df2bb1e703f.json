{"ast":null,"code":"var _jsxFileName = \"/home/majd/Desktop/react-ros2-robot/src/components/RobotState.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nclass RobotState extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null,\n      linear_velocity: 0,\n      angular_velocity: 0\n    };\n    this.init_connection();\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established in Teleoperation Component!\");\n      console.log(this.state.ros);\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({\n        connected: false\n      });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem \");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n      console.log(\"connection problem \");\n    }\n  }\n  componentDidMount() {\n    this.getRobotState();\n  }\n  pose_subscriber() {\n    const {\n      ros\n    } = this.state;\n    if (!ros) {\n      console.warn(\"No ROS connection available for pose subscription.\");\n      return;\n    }\n\n    // odom ROS2 Subscriber for the velocities\n    this.velocity_subscriber = new window.ROSLIB.Topic({\n      ros: ros,\n      name: Config.ODOM_TOPIC,\n      messageType: Config.ODOM_MSG_TYPE\n    });\n\n    // callback function for odom\n    this.velocity_subscriber.subscribe(message => {\n      this.setState({\n        linear_velocity: message.twist.twist.linear.x\n      });\n      this.setState({\n        angular_velocity: message.twist.twist.angular.z\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"Velocities\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, \" Linear Velocity: \", this.state.linear_velocity, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \" Angular Velocity: \", this.state.angular_velocity, \" \"))));\n  }\n}\nexport default RobotState;","map":{"version":3,"names":["React","Component","Row","Col","Config","RobotState","constructor","state","ros","linear_velocity","angular_velocity","init_connection","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","componentDidMount","getRobotState","pose_subscriber","warn","velocity_subscriber","Topic","name","ODOM_TOPIC","messageType","ODOM_MSG_TYPE","subscribe","message","twist","linear","x","angular","z","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/home/majd/Desktop/react-ros2-robot/src/components/RobotState.jsx"],"sourcesContent":["import React, { Component} from \"react\";\nimport { Row, Col} from \"react-bootstrap\";\nimport Config from \"../scripts/config\"\n\nclass RobotState extends Component{\n    state = {\n        ros: null,\n        linear_velocity: 0,\n        angular_velocity: 0,\n    };\n\n    constructor() {\n        super();\n        this.init_connection();\n    }\n\n    init_connection() {\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n    \n        this.state.ros.on(\"connection\", () => {\n            console.log(\"connection established in Teleoperation Component!\");\n            console.log(this.state.ros);\n            this.setState({ connected: true });\n        });\n    \n        this.state.ros.on(\"close\", () => {\n            console.log(\"connection is closed!\");\n            this.setState({ connected: false });\n          //try to reconnect every 3 seconds\n            setTimeout(() => {\n            try {\n                this.state.ros.connect(\n                \"ws://\" +\n                    Config.ROSBRIDGE_SERVER_IP +\n                    \":\" +\n                    Config.ROSBRIDGE_SERVER_PORT +\n                    \"\"\n              );\n            } catch (error) {\n              console.log(\"connection problem \");\n            }\n          }, Config.RECONNECTION_TIMER);\n        });\n    \n        try {\n          this.state.ros.connect(\n            \"ws://\" +\n              Config.ROSBRIDGE_SERVER_IP +\n              \":\" +\n              Config.ROSBRIDGE_SERVER_PORT +\n              \"\"\n          );\n        } catch (error) {\n          console.log(\n            \"ws://\" +\n              Config.ROSBRIDGE_SERVER_IP +\n              \":\" +\n              Config.ROSBRIDGE_SERVER_PORT +\n              \"\"\n          );\n          console.log(\"connection problem \");\n        }\n      }\n    \n      componentDidMount() {\n        this.getRobotState();\n      }\n    \n\n\n    pose_subscriber(){\n        const {ros} = this.state;\n        if (!ros){\n            console.warn(\"No ROS connection available for pose subscription.\")\n            return;\n        }\n\n        // odom ROS2 Subscriber for the velocities\n        this.velocity_subscriber = new window.ROSLIB.Topic({\n            ros: ros,\n            name: Config.ODOM_TOPIC,\n            messageType: Config.ODOM_MSG_TYPE,\n        });\n\n        // callback function for odom\n        this.velocity_subscriber.subscribe((message) => {\n            this.setState({linear_velocity: message.twist.twist.linear.x});\n            this.setState({angular_velocity: message.twist.twist.angular.z});\n        });\n    }\n\n\n    render(){\n        return(\n            <div>\n                <Row>\n                    <Col >\n                        <h3 className=\"mt-5\">Velocities</h3>\n                        <p className=\"mt-0\"> Linear Velocity: {this.state.linear_velocity} </p>\n                        <p className=\"mt-0\"> Angular Velocity: {this.state.angular_velocity} </p>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default RobotState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}