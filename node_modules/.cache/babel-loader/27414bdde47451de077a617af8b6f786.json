{"ast":null,"code":"/**\n * @fileOverview\n * @author Russell Toris - rctoris@wpi.edu\n */\n\nvar Message = require('../core/Message');\nvar EventEmitter2 = require('eventemitter2').EventEmitter2;\n\n/**\n * An actionlib goal that is associated with an action server.\n *\n * Emits the following events:\n *  * 'timeout' - If a timeout occurred while sending a goal.\n *\n * @constructor\n * @param {Object} options\n * @param {ActionClient} options.actionClient - The ROSLIB.ActionClient to use with this goal.\n * @param {Object} options.goalMessage - The JSON object containing the goal for the action server.\n */\nfunction Goal(options) {\n  var that = this;\n  this.actionClient = options.actionClient;\n  this.goalMessage = options.goalMessage;\n  this.isFinished = false;\n\n  // Used to create random IDs\n  var date = new Date();\n\n  // Create a random ID\n  this.goalID = 'goal_' + Math.random() + '_' + date.getTime();\n  // Fill in the goal message\n  this.goalMessage = new Message({\n    goal_id: {\n      stamp: {\n        secs: 0,\n        nsecs: 0\n      },\n      id: this.goalID\n    },\n    goal: this.goalMessage\n  });\n  this.on('status', function (status) {\n    that.status = status;\n  });\n  this.on('result', function (result) {\n    that.isFinished = true;\n    that.result = result;\n  });\n  this.on('feedback', function (feedback) {\n    that.feedback = feedback;\n  });\n\n  // Add the goal\n  this.actionClient.goals[this.goalID] = this;\n}\nGoal.prototype.__proto__ = EventEmitter2.prototype;\n\n/**\n * Send the goal to the action server.\n *\n * @param {number} [timeout] - A timeout length for the goal's result.\n */\nGoal.prototype.send = function (timeout) {\n  var that = this;\n  that.actionClient.goalTopic.publish(that.goalMessage);\n  if (timeout) {\n    setTimeout(function () {\n      if (!that.isFinished) {\n        that.emit('timeout');\n      }\n    }, timeout);\n  }\n};\n\n/**\n * Cancel the current goal.\n */\nGoal.prototype.cancel = function () {\n  var cancelMessage = new Message({\n    id: this.goalID\n  });\n  this.actionClient.cancelTopic.publish(cancelMessage);\n};\nmodule.exports = Goal;","map":null,"metadata":{},"sourceType":"script"}