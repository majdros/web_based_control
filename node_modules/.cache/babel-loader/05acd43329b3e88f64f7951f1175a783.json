{"ast":null,"code":"var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\nvar stringify = JSON.stringify;\nmodule.exports = function (fn, options) {\n  var wkey;\n  var cacheKeys = Object.keys(cache);\n  for (var i = 0, l = cacheKeys.length; i < l; i++) {\n    var key = cacheKeys[i];\n    var exp = cache[key].exports;\n    // Using babel as a transpiler to use esmodule, the export will always\n    // be an object with the default export as a property of it. To ensure\n    // the existing api and babel esmodule exports are both supported we\n    // check for both\n    if (exp === fn || exp && exp.default === fn) {\n      wkey = key;\n      break;\n    }\n  }\n  if (!wkey) {\n    wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n    var wcache = {};\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n      var key = cacheKeys[i];\n      wcache[key] = key;\n    }\n    sources[wkey] = ['function(require,module,exports){' + fn + '(self); }', wcache];\n  }\n  var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n  var scache = {};\n  scache[wkey] = wkey;\n  sources[skey] = ['function(require,module,exports){' +\n  // try to call default if defined to also support babel esmodule exports\n  'var f = require(' + stringify(wkey) + ');' + '(f.default ? f.default : f)(self);' + '}', scache];\n  var workerSources = {};\n  resolveSources(skey);\n  function resolveSources(key) {\n    workerSources[key] = true;\n    for (var depPath in sources[key][1]) {\n      var depKey = sources[key][1][depPath];\n      if (!workerSources[depKey]) {\n        resolveSources(depKey);\n      }\n    }\n  }\n  var src = '(' + bundleFn + ')({' + Object.keys(workerSources).map(function (key) {\n    return stringify(key) + ':[' + sources[key][0] + ',' + stringify(sources[key][1]) + ']';\n  }).join(',') + '},{},[' + stringify(skey) + '])';\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n  var blob = new Blob([src], {\n    type: 'text/javascript'\n  });\n  if (options && options.bare) {\n    return blob;\n  }\n  var workerUrl = URL.createObjectURL(blob);\n  var worker = new Worker(workerUrl);\n  worker.objectURL = workerUrl;\n  return worker;\n};","map":null,"metadata":{},"sourceType":"script"}