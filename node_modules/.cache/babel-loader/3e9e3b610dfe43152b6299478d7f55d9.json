{"ast":null,"code":"var _jsxFileName = \"/home/majd/Desktop/react-ros2-robot/src/components/Connection.jsx\";\n// source: https://github.com/RobotWebTools/roslibjs/blob/ros2/examples/simple.html\nimport React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nclass Connection extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      connected: false,\n      ros: null\n    };\n  }\n  componentDidMount() {\n    // Initialize connection after component is mounted\n    this.init_connection();\n  }\n  init_connection() {\n    // Create ROS connection\n    const ros = new window.ROSLIB.Ros();\n\n    // Set up event listeners\n    ros.on('connection', () => {\n      this.setState({\n        connected: true\n      });\n      console.log('Connected to websocket server.');\n    });\n    ros.on('error', error => {\n      console.log('Error connecting to websocket server: ', error);\n    });\n    ros.on('close', () => {\n      this.setState({\n        connected: false\n      });\n      console.log('Connection to websocket server closed.');\n    });\n\n    // Update state correctly\n    this.setState({\n      ros: ros\n    });\n\n    // Connect to ROS websocket server\n    ros.connect('ws:http://localhost:3000/');\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      className: \"text-center m-4\",\n      variant: this.state.connected ? \"success\" : \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, this.state.connected ? \"Robot Connected\" : \"Robot Disconnected\"));\n  }\n}\nexport default Connection;","map":{"version":3,"names":["React","Component","Alert","Connection","constructor","args","state","connected","ros","componentDidMount","init_connection","window","ROSLIB","Ros","on","setState","console","log","error","connect","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","variant"],"sources":["/home/majd/Desktop/react-ros2-robot/src/components/Connection.jsx"],"sourcesContent":["// source: https://github.com/RobotWebTools/roslibjs/blob/ros2/examples/simple.html\nimport React, { Component} from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\n\nclass Connection extends Component{\n    state = { \n        connected: false,\n        ros: null,\n    };\n\n\n\n    componentDidMount() {\n        // Initialize connection after component is mounted\n        this.init_connection();\n    }\n\n    init_connection(){\n        // Create ROS connection\n        const ros = new window.ROSLIB.Ros();\n        \n        // Set up event listeners\n        ros.on('connection', () => {\n            this.setState({ connected: true });\n            console.log('Connected to websocket server.');\n        });\n        \n        ros.on('error', (error) => {\n            console.log('Error connecting to websocket server: ', error);\n        });\n        \n        ros.on('close', () => {\n            this.setState({ connected: false });\n            console.log('Connection to websocket server closed.');\n        });\n        \n        // Update state correctly\n        this.setState({ ros: ros });\n        \n        // Connect to ROS websocket server\n        ros.connect('ws:http://localhost:3000/');\n    }\n\n\n    render(){\n        return (\n            <div>\n                <Alert className=\"text-center m-4\" variant={this.state.connected ? \"success\": \"danger\"}>\n                    {this.state.connected ? \"Robot Connected\": \"Robot Disconnected\"}\n                </Alert>\n            </div>\n            \n        );\n    }\n}\n\nexport default Connection;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC,OAAOC,KAAK,MAAM,uBAAuB;AAEzC,MAAMC,UAAU,SAASF,SAAS;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC9BC,KAAK,GAAG;MACJC,SAAS,EAAE,KAAK;MAChBC,GAAG,EAAE;IACT,CAAC;EAAA;EAIDC,iBAAiBA,CAAA,EAAG;IAChB;IACA,IAAI,CAACC,eAAe,CAAC,CAAC;EAC1B;EAEAA,eAAeA,CAAA,EAAE;IACb;IACA,MAAMF,GAAG,GAAG,IAAIG,MAAM,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC;;IAEnC;IACAL,GAAG,CAACM,EAAE,CAAC,YAAY,EAAE,MAAM;MACvB,IAAI,CAACC,QAAQ,CAAC;QAAER,SAAS,EAAE;MAAK,CAAC,CAAC;MAClCS,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IACjD,CAAC,CAAC;IAEFT,GAAG,CAACM,EAAE,CAAC,OAAO,EAAGI,KAAK,IAAK;MACvBF,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEC,KAAK,CAAC;IAChE,CAAC,CAAC;IAEFV,GAAG,CAACM,EAAE,CAAC,OAAO,EAAE,MAAM;MAClB,IAAI,CAACC,QAAQ,CAAC;QAAER,SAAS,EAAE;MAAM,CAAC,CAAC;MACnCS,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACzD,CAAC,CAAC;;IAEF;IACA,IAAI,CAACF,QAAQ,CAAC;MAAEP,GAAG,EAAEA;IAAI,CAAC,CAAC;;IAE3B;IACAA,GAAG,CAACW,OAAO,CAAC,2BAA2B,CAAC;EAC5C;EAGAC,MAAMA,CAAA,EAAE;IACJ,oBACIpB,KAAA,CAAAqB,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACI3B,KAAA,CAAAqB,aAAA,CAACnB,KAAK;MAAC0B,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAE,IAAI,CAACvB,KAAK,CAACC,SAAS,GAAG,SAAS,GAAE,QAAS;MAAAe,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAClF,IAAI,CAACrB,KAAK,CAACC,SAAS,GAAG,iBAAiB,GAAE,oBACxC,CACN,CAAC;EAGd;AACJ;AAEA,eAAeJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}