{"ast":null,"code":"var _jsxFileName = \"/home/majd/Desktop/react-ros2-robot/src/components/Teleoperation.jsx\";\n// source: https://github.com/RobotWebTools/roslibjs/blob/ros2/examples/node_simple.js\n// source: https://www.npmjs.com/package/react-joystick-component\n\nimport React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\nclass Teleoperation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n    this.Move = this.Move.bind(this);\n    this.Stop = this.Stop.bind(this);\n  }\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      this.setState({\n        connected: true\n      });\n      console.log(\"connection established in Teleoperation Component!\");\n    });\n    this.state.ros.on(\"close\", () => {\n      this.setState({\n        connected: false\n      });\n      console.log(\"connection is closed!\");\n\n      // reconnect every 5 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.error(\"connection problem: \", error);\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.error(\"connection problem: \", error);\n    }\n  }\n  Move(event) {\n    console.log(\"handle move\");\n\n    // create a ROS publisher on the topic cmd_vel_web\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: Config.CMD_VEL_MSG_TYPE\n    });\n\n    // create a twist message to be to published to rosbridge\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y / 50,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x / 50\n      }\n    });\n    cmd_vel.publish(twist);\n  }\n  Stop() {\n    console.log(\"handle stop\");\n\n    // create a ROS publisher on the topic cmd_vel_web\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL_TOPIC,\n      messageType: Config.CMD_VEL_MSG_TYPE\n    });\n\n    // create a twist message to be to published to rosbridge\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    });\n    cmd_vel.publish(twist);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Joystick, {\n      size: 250,\n      baseColor: \"#EEEEEE\",\n      stickColor: \"#BBBBBB\",\n      move: this.Move,\n      stop: this.Stop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }));\n  }\n}\nexport default Teleoperation;","map":{"version":3,"names":["React","Component","Joystick","Config","Teleoperation","constructor","state","ros","init_connection","Move","bind","Stop","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","event","cmd_vel","Topic","name","CMD_VEL_TOPIC","messageType","CMD_VEL_MSG_TYPE","twist","Message","linear","x","y","z","angular","publish","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","size","baseColor","stickColor","move","stop"],"sources":["/home/majd/Desktop/react-ros2-robot/src/components/Teleoperation.jsx"],"sourcesContent":["// source: https://github.com/RobotWebTools/roslibjs/blob/ros2/examples/node_simple.js\n// source: https://www.npmjs.com/package/react-joystick-component\n\nimport React, { Component } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport Config from \"../scripts/config\";\n\n\nclass Teleoperation extends Component {\n    state = { ros: null };\n\n    constructor() {\n    super();\n    this.init_connection();\n\n    this.Move = this.Move.bind(this);\n    this.Stop = this.Stop.bind(this);\n    }\n\n\n    init_connection() {\n        this.state.ros = new window.ROSLIB.Ros();\n        console.log(this.state.ros);\n    \n        this.state.ros.on(\"connection\", () => {\n            this.setState({ connected: true });\n            console.log(\"connection established in Teleoperation Component!\");\n        });\n    \n        this.state.ros.on(\"close\", () => {\n            this.setState({ connected: false });\n            console.log(\"connection is closed!\");\n\n            // reconnect every 5 seconds\n            setTimeout(() => {\n            try {\n                this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n            } \n            catch (error) {\n                console.error(\"connection problem: \", error);\n            }\n            }, Config.RECONNECTION_TIMER);\n        });\n    \n        try {\n            this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } \n        catch (error) {\n            console.error(\"connection problem: \", error);\n        }\n    }\n\n\n    Move(event) {\n        console.log(\"handle move\");\n\n        // create a ROS publisher on the topic cmd_vel_web\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: Config.CMD_VEL_MSG_TYPE,\n        });\n\n        // create a twist message to be to published to rosbridge\n        var twist = new window.ROSLIB.Message({\n            linear: {x: event.y / 50, y: 0, z: 0},\n            angular: {x: 0, y: 0, z: -event.x / 50},\n        });\n\n        cmd_vel.publish(twist);\n    }\n\n\n    Stop() {\n        console.log(\"handle stop\");\n\n        // create a ROS publisher on the topic cmd_vel_web\n        var cmd_vel = new window.ROSLIB.Topic({\n            ros: this.state.ros,\n            name: Config.CMD_VEL_TOPIC,\n            messageType: Config.CMD_VEL_MSG_TYPE,\n        });\n\n        // create a twist message to be to published to rosbridge\n        var twist = new window.ROSLIB.Message({\n            linear: {x: 0, y: 0, z: 0},\n            angular: {x: 0, y: 0, z: 0},\n        });\n\n        cmd_vel.publish(twist);\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <Joystick\n                    size={250}\n                    baseColor=\"#EEEEEE\"\n                    stickColor=\"#BBBBBB\"\n                    move={this.Move}\n                    stop={this.Stop}\n                ></Joystick>\n            </div>\n        );\n    }\n}\n\nexport default Teleoperation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}