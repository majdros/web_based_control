{"ast":null,"code":"var _jsxFileName = \"/home/majd/Desktop/react-ros2-robot/src/components/Latecny.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nclass Latecny extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latency: null,\n      ros: null\n    };\n  }\n  componentDidMount() {\n    if (this.props.ros) {\n      this.setState({\n        ros: this.props.ros\n      }, () => {\n        this.startLatencyMeasurement();\n      });\n    }\n  }\n  componentDidUpdate(prevProps) {\n    // Aktualisiere die ROS-Verbindung, falls sie sich ändert\n    if (this.props.ros !== prevProps.ros) {\n      this.setState({\n        ros: this.props.ros\n      }, () => {\n        this.startLatencyMeasurement();\n      });\n    }\n  }\n  startLatencyMeasurement() {\n    const {\n      ros\n    } = this.state;\n    if (!ros) {\n      console.warn(\"No ROS connection available for latency measurement.\");\n      return;\n    }\n\n    // Erstelle ein ROS-TOPIC für die Latenz\n    const latencyTopic = new window.ROSLIB.Topic({\n      ros: ros,\n      name: \"/latency_ping\",\n      // Server muss dieses Topic behandeln\n      messageType: \"std_msgs/String\"\n    });\n\n    // Sende regelmäßig Pings und berechne die Latenz\n    setInterval(() => {\n      const startTime = Date.now(); // Zeitstempel beim Senden\n\n      // Sende eine Nachricht\n      const la = new window.ROSLIB.Message({\n        data: \"ping\"\n      });\n      latencyTopic.publish(message);\n\n      // Warte auf die Antwort\n      latencyTopic.subscribe(response => {\n        const endTime = Date.now(); // Zeitstempel beim Empfang\n        const latency = endTime - startTime; // Latenz berechnen\n        this.setState({\n          latency\n        }); // Latenz im State speichern\n        latencyTopic.unsubscribe(); // Nur einmal auf die Antwort warten\n      });\n    }, 5000); // Alle 5 Sekunden messen\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"Latecny\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, this.state.latency !== null ? ` ${this.state.latency} ms` : \"Messung läuft...\"))));\n  }\n}\nexport default Latecny;","map":{"version":3,"names":["React","Component","Row","Col","Latecny","constructor","args","state","latency","ros","componentDidMount","props","setState","startLatencyMeasurement","componentDidUpdate","prevProps","console","warn","latencyTopic","window","ROSLIB","Topic","name","messageType","setInterval","startTime","Date","now","la","Message","data","publish","message","subscribe","response","endTime","unsubscribe","render","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["/home/majd/Desktop/react-ros2-robot/src/components/Latecny.jsx"],"sourcesContent":["import React, { Component} from \"react\";\nimport { Row, Col} from \"react-bootstrap\";\n\nclass Latecny extends Component{\n    state = {\n        latency: null,\n        ros: null,\n    };\n\n    componentDidMount() {\n        if (this.props.ros) {\n            this.setState({ ros: this.props.ros }, () => {\n                this.startLatencyMeasurement();\n            });\n        }\n    }\n\n\n    componentDidUpdate(prevProps) {\n        // Aktualisiere die ROS-Verbindung, falls sie sich ändert\n        if (this.props.ros !== prevProps.ros) {\n            this.setState({ ros: this.props.ros }, () => {\n                this.startLatencyMeasurement();\n            });\n        }\n    }\n\n    startLatencyMeasurement() {\n        const { ros } = this.state;\n\n        if (!ros) {\n            console.warn(\"No ROS connection available for latency measurement.\");\n            return;\n        }\n\n        // Erstelle ein ROS-TOPIC für die Latenz\n        const latencyTopic = new window.ROSLIB.Topic({\n            ros: ros,\n            name: \"/latency_ping\", // Server muss dieses Topic behandeln\n            messageType: \"std_msgs/String\",\n        });\n\n        // Sende regelmäßig Pings und berechne die Latenz\n        setInterval(() => {\n            const startTime = Date.now(); // Zeitstempel beim Senden\n\n            // Sende eine Nachricht\n            const la = new window.ROSLIB.Message({\n                data: \"ping\",\n            });\n            latencyTopic.publish(message);\n\n            // Warte auf die Antwort\n            latencyTopic.subscribe((response) => {\n                const endTime = Date.now(); // Zeitstempel beim Empfang\n                const latency = endTime - startTime; // Latenz berechnen\n                this.setState({ latency }); // Latenz im State speichern\n                latencyTopic.unsubscribe(); // Nur einmal auf die Antwort warten\n            });\n        }, 5000); // Alle 5 Sekunden messen\n    }\n\n\n    render(){\n        return(\n            <div>\n                <Row className=\"mb-5\">\n                    <Col >\n                        <h3 className=\"mt-4\">Latecny</h3>\n                        <p className=\"mt-0\">\n                            {this.state.latency !== null? ` ${this.state.latency} ms` : \"Messung läuft...\"}\n                        </p>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Latecny;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}